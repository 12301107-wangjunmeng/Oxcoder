#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Yuanquan")]
	public partial class OxcoderDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertQuiz(Quiz instance);
    partial void UpdateQuiz(Quiz instance);
    partial void DeleteQuiz(Quiz instance);
    partial void InsertChallenge(Challenge instance);
    partial void UpdateChallenge(Challenge instance);
    partial void DeleteChallenge(Challenge instance);
    partial void InsertChallenge_Quiz(Challenge_Quiz instance);
    partial void UpdateChallenge_Quiz(Challenge_Quiz instance);
    partial void DeleteChallenge_Quiz(Challenge_Quiz instance);
    partial void InsertEnterprise(Enterprise instance);
    partial void UpdateEnterprise(Enterprise instance);
    partial void DeleteEnterprise(Enterprise instance);
    partial void InsertPerson_Challenge(Person_Challenge instance);
    partial void UpdatePerson_Challenge(Person_Challenge instance);
    partial void DeletePerson_Challenge(Person_Challenge instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    #endregion
		
		public OxcoderDataContext() : 
				base(global::Model.Properties.Settings.Default.YuanquanConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public OxcoderDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxcoderDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxcoderDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxcoderDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admin
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Quiz> Quiz
		{
			get
			{
				return this.GetTable<Quiz>();
			}
		}
		
		public System.Data.Linq.Table<Challenge> Challenge
		{
			get
			{
				return this.GetTable<Challenge>();
			}
		}
		
		public System.Data.Linq.Table<Challenge_Quiz> Challenge_Quiz
		{
			get
			{
				return this.GetTable<Challenge_Quiz>();
			}
		}
		
		public System.Data.Linq.Table<Enterprise> Enterprise
		{
			get
			{
				return this.GetTable<Enterprise>();
			}
		}
		
		public System.Data.Linq.Table<Person_Challenge> Person_Challenge
		{
			get
			{
				return this.GetTable<Person_Challenge>();
			}
		}
		
		public System.Data.Linq.Table<Person> Person
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Aid;
		
		private string _Aname;
		
		private string _Aemail;
		
		private string _Apassword;
		
		private System.Nullable<int> _Alevel;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAidChanging(int value);
    partial void OnAidChanged();
    partial void OnAnameChanging(string value);
    partial void OnAnameChanged();
    partial void OnAemailChanging(string value);
    partial void OnAemailChanged();
    partial void OnApasswordChanging(string value);
    partial void OnApasswordChanged();
    partial void OnAlevelChanging(System.Nullable<int> value);
    partial void OnAlevelChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Aid
		{
			get
			{
				return this._Aid;
			}
			set
			{
				if ((this._Aid != value))
				{
					this.OnAidChanging(value);
					this.SendPropertyChanging();
					this._Aid = value;
					this.SendPropertyChanged("Aid");
					this.OnAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aname", DbType="VarChar(100)")]
		public string Aname
		{
			get
			{
				return this._Aname;
			}
			set
			{
				if ((this._Aname != value))
				{
					this.OnAnameChanging(value);
					this.SendPropertyChanging();
					this._Aname = value;
					this.SendPropertyChanged("Aname");
					this.OnAnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aemail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Aemail
		{
			get
			{
				return this._Aemail;
			}
			set
			{
				if ((this._Aemail != value))
				{
					this.OnAemailChanging(value);
					this.SendPropertyChanging();
					this._Aemail = value;
					this.SendPropertyChanged("Aemail");
					this.OnAemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Apassword
		{
			get
			{
				return this._Apassword;
			}
			set
			{
				if ((this._Apassword != value))
				{
					this.OnApasswordChanging(value);
					this.SendPropertyChanging();
					this._Apassword = value;
					this.SendPropertyChanged("Apassword");
					this.OnApasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alevel", DbType="Int")]
		public System.Nullable<int> Alevel
		{
			get
			{
				return this._Alevel;
			}
			set
			{
				if ((this._Alevel != value))
				{
					this.OnAlevelChanging(value);
					this.SendPropertyChanging();
					this._Alevel = value;
					this.SendPropertyChanged("Alevel");
					this.OnAlevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quiz")]
	public partial class Quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Qid;
		
		private string _Qname;
		
		private string _Qdescription;
		
		private string _Qclassify;
		
		private System.Nullable<int> _Qtime;
		
		private string _QtargetFile;
		
		private EntitySet<Challenge_Quiz> _Challenge_Quiz;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQidChanging(int value);
    partial void OnQidChanged();
    partial void OnQnameChanging(string value);
    partial void OnQnameChanged();
    partial void OnQdescriptionChanging(string value);
    partial void OnQdescriptionChanged();
    partial void OnQclassifyChanging(string value);
    partial void OnQclassifyChanged();
    partial void OnQtimeChanging(System.Nullable<int> value);
    partial void OnQtimeChanged();
    partial void OnQtargetFileChanging(string value);
    partial void OnQtargetFileChanged();
    #endregion
		
		public Quiz()
		{
			this._Challenge_Quiz = new EntitySet<Challenge_Quiz>(new Action<Challenge_Quiz>(this.attach_Challenge_Quiz), new Action<Challenge_Quiz>(this.detach_Challenge_Quiz));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Qid
		{
			get
			{
				return this._Qid;
			}
			set
			{
				if ((this._Qid != value))
				{
					this.OnQidChanging(value);
					this.SendPropertyChanging();
					this._Qid = value;
					this.SendPropertyChanged("Qid");
					this.OnQidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Qname
		{
			get
			{
				return this._Qname;
			}
			set
			{
				if ((this._Qname != value))
				{
					this.OnQnameChanging(value);
					this.SendPropertyChanging();
					this._Qname = value;
					this.SendPropertyChanged("Qname");
					this.OnQnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qdescription", DbType="VarChar(200)")]
		public string Qdescription
		{
			get
			{
				return this._Qdescription;
			}
			set
			{
				if ((this._Qdescription != value))
				{
					this.OnQdescriptionChanging(value);
					this.SendPropertyChanging();
					this._Qdescription = value;
					this.SendPropertyChanged("Qdescription");
					this.OnQdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qclassify", DbType="VarChar(100)")]
		public string Qclassify
		{
			get
			{
				return this._Qclassify;
			}
			set
			{
				if ((this._Qclassify != value))
				{
					this.OnQclassifyChanging(value);
					this.SendPropertyChanging();
					this._Qclassify = value;
					this.SendPropertyChanged("Qclassify");
					this.OnQclassifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qtime", DbType="Int")]
		public System.Nullable<int> Qtime
		{
			get
			{
				return this._Qtime;
			}
			set
			{
				if ((this._Qtime != value))
				{
					this.OnQtimeChanging(value);
					this.SendPropertyChanging();
					this._Qtime = value;
					this.SendPropertyChanged("Qtime");
					this.OnQtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtargetFile", DbType="VarChar(100)")]
		public string QtargetFile
		{
			get
			{
				return this._QtargetFile;
			}
			set
			{
				if ((this._QtargetFile != value))
				{
					this.OnQtargetFileChanging(value);
					this.SendPropertyChanging();
					this._QtargetFile = value;
					this.SendPropertyChanged("QtargetFile");
					this.OnQtargetFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_Challenge_Quiz", Storage="_Challenge_Quiz", ThisKey="Qid", OtherKey="Qid")]
		public EntitySet<Challenge_Quiz> Challenge_Quiz
		{
			get
			{
				return this._Challenge_Quiz;
			}
			set
			{
				this._Challenge_Quiz.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Challenge_Quiz(Challenge_Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = this;
		}
		
		private void detach_Challenge_Quiz(Challenge_Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Challenge")]
	public partial class Challenge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cid;
		
		private int _Eid;
		
		private System.Nullable<int> _Cdifficulty;
		
		private string _Cposition;
		
		private string _Csalary;
		
		private string _Ctime;
		
		private System.Nullable<int> _Cnumber;
		
		private int _Cstate;
		
		private string _Cattract;
		
		private EntitySet<Challenge_Quiz> _Challenge_Quiz;
		
		private EntitySet<Person_Challenge> _Person_Challenge;
		
		private EntityRef<Enterprise> _Enterprise;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OnEidChanging(int value);
    partial void OnEidChanged();
    partial void OnCdifficultyChanging(System.Nullable<int> value);
    partial void OnCdifficultyChanged();
    partial void OnCpositionChanging(string value);
    partial void OnCpositionChanged();
    partial void OnCsalaryChanging(string value);
    partial void OnCsalaryChanged();
    partial void OnCtimeChanging(string value);
    partial void OnCtimeChanged();
    partial void OnCnumberChanging(System.Nullable<int> value);
    partial void OnCnumberChanged();
    partial void OnCstateChanging(int value);
    partial void OnCstateChanged();
    partial void OnCattractChanging(string value);
    partial void OnCattractChanged();
    #endregion
		
		public Challenge()
		{
			this._Challenge_Quiz = new EntitySet<Challenge_Quiz>(new Action<Challenge_Quiz>(this.attach_Challenge_Quiz), new Action<Challenge_Quiz>(this.detach_Challenge_Quiz));
			this._Person_Challenge = new EntitySet<Person_Challenge>(new Action<Person_Challenge>(this.attach_Person_Challenge), new Action<Person_Challenge>(this.detach_Person_Challenge));
			this._Enterprise = default(EntityRef<Enterprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eid", DbType="Int NOT NULL")]
		public int Eid
		{
			get
			{
				return this._Eid;
			}
			set
			{
				if ((this._Eid != value))
				{
					if (this._Enterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEidChanging(value);
					this.SendPropertyChanging();
					this._Eid = value;
					this.SendPropertyChanged("Eid");
					this.OnEidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdifficulty", DbType="Int")]
		public System.Nullable<int> Cdifficulty
		{
			get
			{
				return this._Cdifficulty;
			}
			set
			{
				if ((this._Cdifficulty != value))
				{
					this.OnCdifficultyChanging(value);
					this.SendPropertyChanging();
					this._Cdifficulty = value;
					this.SendPropertyChanged("Cdifficulty");
					this.OnCdifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cposition", DbType="VarChar(100)")]
		public string Cposition
		{
			get
			{
				return this._Cposition;
			}
			set
			{
				if ((this._Cposition != value))
				{
					this.OnCpositionChanging(value);
					this.SendPropertyChanging();
					this._Cposition = value;
					this.SendPropertyChanged("Cposition");
					this.OnCpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Csalary", DbType="VarChar(50)")]
		public string Csalary
		{
			get
			{
				return this._Csalary;
			}
			set
			{
				if ((this._Csalary != value))
				{
					this.OnCsalaryChanging(value);
					this.SendPropertyChanging();
					this._Csalary = value;
					this.SendPropertyChanged("Csalary");
					this.OnCsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ctime", DbType="VarChar(50)")]
		public string Ctime
		{
			get
			{
				return this._Ctime;
			}
			set
			{
				if ((this._Ctime != value))
				{
					this.OnCtimeChanging(value);
					this.SendPropertyChanging();
					this._Ctime = value;
					this.SendPropertyChanged("Ctime");
					this.OnCtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cnumber", DbType="Int")]
		public System.Nullable<int> Cnumber
		{
			get
			{
				return this._Cnumber;
			}
			set
			{
				if ((this._Cnumber != value))
				{
					this.OnCnumberChanging(value);
					this.SendPropertyChanging();
					this._Cnumber = value;
					this.SendPropertyChanged("Cnumber");
					this.OnCnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cstate", DbType="Int NOT NULL")]
		public int Cstate
		{
			get
			{
				return this._Cstate;
			}
			set
			{
				if ((this._Cstate != value))
				{
					this.OnCstateChanging(value);
					this.SendPropertyChanging();
					this._Cstate = value;
					this.SendPropertyChanged("Cstate");
					this.OnCstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cattract", DbType="VarChar(100)")]
		public string Cattract
		{
			get
			{
				return this._Cattract;
			}
			set
			{
				if ((this._Cattract != value))
				{
					this.OnCattractChanging(value);
					this.SendPropertyChanging();
					this._Cattract = value;
					this.SendPropertyChanged("Cattract");
					this.OnCattractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Challenge_Challenge_Quiz", Storage="_Challenge_Quiz", ThisKey="Cid", OtherKey="Cid")]
		public EntitySet<Challenge_Quiz> Challenge_Quiz
		{
			get
			{
				return this._Challenge_Quiz;
			}
			set
			{
				this._Challenge_Quiz.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Challenge_Person_Challenge", Storage="_Person_Challenge", ThisKey="Cid", OtherKey="Cid")]
		public EntitySet<Person_Challenge> Person_Challenge
		{
			get
			{
				return this._Person_Challenge;
			}
			set
			{
				this._Person_Challenge.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_Challenge", Storage="_Enterprise", ThisKey="Eid", OtherKey="Eid", IsForeignKey=true)]
		public Enterprise Enterprise
		{
			get
			{
				return this._Enterprise.Entity;
			}
			set
			{
				Enterprise previousValue = this._Enterprise.Entity;
				if (((previousValue != value) 
							|| (this._Enterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprise.Entity = null;
						previousValue.Challenge.Remove(this);
					}
					this._Enterprise.Entity = value;
					if ((value != null))
					{
						value.Challenge.Add(this);
						this._Eid = value.Eid;
					}
					else
					{
						this._Eid = default(int);
					}
					this.SendPropertyChanged("Enterprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Challenge_Quiz(Challenge_Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Challenge = this;
		}
		
		private void detach_Challenge_Quiz(Challenge_Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Challenge = null;
		}
		
		private void attach_Person_Challenge(Person_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Challenge = this;
		}
		
		private void detach_Person_Challenge(Person_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Challenge = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Challenge_Quiz")]
	public partial class Challenge_Quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Qid;
		
		private int _Cid;
		
		private EntityRef<Challenge> _Challenge;
		
		private EntityRef<Quiz> _Quiz;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQidChanging(int value);
    partial void OnQidChanged();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    #endregion
		
		public Challenge_Quiz()
		{
			this._Challenge = default(EntityRef<Challenge>);
			this._Quiz = default(EntityRef<Quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Qid
		{
			get
			{
				return this._Qid;
			}
			set
			{
				if ((this._Qid != value))
				{
					if (this._Quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQidChanging(value);
					this.SendPropertyChanging();
					this._Qid = value;
					this.SendPropertyChanged("Qid");
					this.OnQidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					if (this._Challenge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Challenge_Challenge_Quiz", Storage="_Challenge", ThisKey="Cid", OtherKey="Cid", IsForeignKey=true)]
		public Challenge Challenge
		{
			get
			{
				return this._Challenge.Entity;
			}
			set
			{
				Challenge previousValue = this._Challenge.Entity;
				if (((previousValue != value) 
							|| (this._Challenge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Challenge.Entity = null;
						previousValue.Challenge_Quiz.Remove(this);
					}
					this._Challenge.Entity = value;
					if ((value != null))
					{
						value.Challenge_Quiz.Add(this);
						this._Cid = value.Cid;
					}
					else
					{
						this._Cid = default(int);
					}
					this.SendPropertyChanged("Challenge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_Challenge_Quiz", Storage="_Quiz", ThisKey="Qid", OtherKey="Qid", IsForeignKey=true)]
		public Quiz Quiz
		{
			get
			{
				return this._Quiz.Entity;
			}
			set
			{
				Quiz previousValue = this._Quiz.Entity;
				if (((previousValue != value) 
							|| (this._Quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quiz.Entity = null;
						previousValue.Challenge_Quiz.Remove(this);
					}
					this._Quiz.Entity = value;
					if ((value != null))
					{
						value.Challenge_Quiz.Add(this);
						this._Qid = value.Qid;
					}
					else
					{
						this._Qid = default(int);
					}
					this.SendPropertyChanged("Quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enterprise")]
	public partial class Enterprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Eid;
		
		private string _Epassword;
		
		private string _Eemail;
		
		private string _Ename;
		
		private string _EnickName;
		
		private string _Elogo;
		
		private string _Ewebsite;
		
		private string _Ecity;
		
		private string _Escope;
		
		private string _Eintroduction;
		
		private string _Eprove;
		
		private System.Nullable<int> _Ephone;
		
		private string _EhrName;
		
		private System.Nullable<System.DateTime> _Etime;
		
		private System.Nullable<int> _Estate;
		
		private EntitySet<Challenge> _Challenge;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEidChanging(int value);
    partial void OnEidChanged();
    partial void OnEpasswordChanging(string value);
    partial void OnEpasswordChanged();
    partial void OnEemailChanging(string value);
    partial void OnEemailChanged();
    partial void OnEnameChanging(string value);
    partial void OnEnameChanged();
    partial void OnEnickNameChanging(string value);
    partial void OnEnickNameChanged();
    partial void OnElogoChanging(string value);
    partial void OnElogoChanged();
    partial void OnEwebsiteChanging(string value);
    partial void OnEwebsiteChanged();
    partial void OnEcityChanging(string value);
    partial void OnEcityChanged();
    partial void OnEscopeChanging(string value);
    partial void OnEscopeChanged();
    partial void OnEintroductionChanging(string value);
    partial void OnEintroductionChanged();
    partial void OnEproveChanging(string value);
    partial void OnEproveChanged();
    partial void OnEphoneChanging(System.Nullable<int> value);
    partial void OnEphoneChanged();
    partial void OnEhrNameChanging(string value);
    partial void OnEhrNameChanged();
    partial void OnEtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEtimeChanged();
    partial void OnEstateChanging(System.Nullable<int> value);
    partial void OnEstateChanged();
    #endregion
		
		public Enterprise()
		{
			this._Challenge = new EntitySet<Challenge>(new Action<Challenge>(this.attach_Challenge), new Action<Challenge>(this.detach_Challenge));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Eid
		{
			get
			{
				return this._Eid;
			}
			set
			{
				if ((this._Eid != value))
				{
					this.OnEidChanging(value);
					this.SendPropertyChanging();
					this._Eid = value;
					this.SendPropertyChanged("Eid");
					this.OnEidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Epassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Epassword
		{
			get
			{
				return this._Epassword;
			}
			set
			{
				if ((this._Epassword != value))
				{
					this.OnEpasswordChanging(value);
					this.SendPropertyChanging();
					this._Epassword = value;
					this.SendPropertyChanged("Epassword");
					this.OnEpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eemail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Eemail
		{
			get
			{
				return this._Eemail;
			}
			set
			{
				if ((this._Eemail != value))
				{
					this.OnEemailChanging(value);
					this.SendPropertyChanging();
					this._Eemail = value;
					this.SendPropertyChanged("Eemail");
					this.OnEemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ename", DbType="VarChar(100)")]
		public string Ename
		{
			get
			{
				return this._Ename;
			}
			set
			{
				if ((this._Ename != value))
				{
					this.OnEnameChanging(value);
					this.SendPropertyChanging();
					this._Ename = value;
					this.SendPropertyChanged("Ename");
					this.OnEnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnickName", DbType="VarChar(100)")]
		public string EnickName
		{
			get
			{
				return this._EnickName;
			}
			set
			{
				if ((this._EnickName != value))
				{
					this.OnEnickNameChanging(value);
					this.SendPropertyChanging();
					this._EnickName = value;
					this.SendPropertyChanged("EnickName");
					this.OnEnickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elogo", DbType="VarChar(100)")]
		public string Elogo
		{
			get
			{
				return this._Elogo;
			}
			set
			{
				if ((this._Elogo != value))
				{
					this.OnElogoChanging(value);
					this.SendPropertyChanging();
					this._Elogo = value;
					this.SendPropertyChanged("Elogo");
					this.OnElogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ewebsite", DbType="VarChar(100)")]
		public string Ewebsite
		{
			get
			{
				return this._Ewebsite;
			}
			set
			{
				if ((this._Ewebsite != value))
				{
					this.OnEwebsiteChanging(value);
					this.SendPropertyChanging();
					this._Ewebsite = value;
					this.SendPropertyChanged("Ewebsite");
					this.OnEwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ecity", DbType="VarChar(50)")]
		public string Ecity
		{
			get
			{
				return this._Ecity;
			}
			set
			{
				if ((this._Ecity != value))
				{
					this.OnEcityChanging(value);
					this.SendPropertyChanging();
					this._Ecity = value;
					this.SendPropertyChanged("Ecity");
					this.OnEcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Escope", DbType="VarChar(50)")]
		public string Escope
		{
			get
			{
				return this._Escope;
			}
			set
			{
				if ((this._Escope != value))
				{
					this.OnEscopeChanging(value);
					this.SendPropertyChanging();
					this._Escope = value;
					this.SendPropertyChanged("Escope");
					this.OnEscopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eintroduction", DbType="VarChar(200)")]
		public string Eintroduction
		{
			get
			{
				return this._Eintroduction;
			}
			set
			{
				if ((this._Eintroduction != value))
				{
					this.OnEintroductionChanging(value);
					this.SendPropertyChanging();
					this._Eintroduction = value;
					this.SendPropertyChanged("Eintroduction");
					this.OnEintroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eprove", DbType="VarChar(200)")]
		public string Eprove
		{
			get
			{
				return this._Eprove;
			}
			set
			{
				if ((this._Eprove != value))
				{
					this.OnEproveChanging(value);
					this.SendPropertyChanging();
					this._Eprove = value;
					this.SendPropertyChanged("Eprove");
					this.OnEproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ephone", DbType="Int")]
		public System.Nullable<int> Ephone
		{
			get
			{
				return this._Ephone;
			}
			set
			{
				if ((this._Ephone != value))
				{
					this.OnEphoneChanging(value);
					this.SendPropertyChanging();
					this._Ephone = value;
					this.SendPropertyChanged("Ephone");
					this.OnEphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EhrName", DbType="VarChar(50)")]
		public string EhrName
		{
			get
			{
				return this._EhrName;
			}
			set
			{
				if ((this._EhrName != value))
				{
					this.OnEhrNameChanging(value);
					this.SendPropertyChanging();
					this._EhrName = value;
					this.SendPropertyChanged("EhrName");
					this.OnEhrNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Etime
		{
			get
			{
				return this._Etime;
			}
			set
			{
				if ((this._Etime != value))
				{
					this.OnEtimeChanging(value);
					this.SendPropertyChanging();
					this._Etime = value;
					this.SendPropertyChanged("Etime");
					this.OnEtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estate", DbType="Int")]
		public System.Nullable<int> Estate
		{
			get
			{
				return this._Estate;
			}
			set
			{
				if ((this._Estate != value))
				{
					this.OnEstateChanging(value);
					this.SendPropertyChanging();
					this._Estate = value;
					this.SendPropertyChanged("Estate");
					this.OnEstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_Challenge", Storage="_Challenge", ThisKey="Eid", OtherKey="Eid")]
		public EntitySet<Challenge> Challenge
		{
			get
			{
				return this._Challenge;
			}
			set
			{
				this._Challenge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Challenge(Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = this;
		}
		
		private void detach_Challenge(Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person_Challenge")]
	public partial class Person_Challenge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cid;
		
		private int _Uid;
		
		private int _State;
		
		private System.Nullable<System.DateTime> _Usetime;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<System.DateTime> _AcceptTime;
		
		private EntityRef<Challenge> _Challenge;
		
		private EntityRef<Person> _Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OnUidChanging(int value);
    partial void OnUidChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnUsetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUsetimeChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnAcceptTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptTimeChanged();
    #endregion
		
		public Person_Challenge()
		{
			this._Challenge = default(EntityRef<Challenge>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					if (this._Challenge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Usetime
		{
			get
			{
				return this._Usetime;
			}
			set
			{
				if ((this._Usetime != value))
				{
					this.OnUsetimeChanging(value);
					this.SendPropertyChanging();
					this._Usetime = value;
					this.SendPropertyChanged("Usetime");
					this.OnUsetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptTime
		{
			get
			{
				return this._AcceptTime;
			}
			set
			{
				if ((this._AcceptTime != value))
				{
					this.OnAcceptTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptTime = value;
					this.SendPropertyChanged("AcceptTime");
					this.OnAcceptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Challenge_Person_Challenge", Storage="_Challenge", ThisKey="Cid", OtherKey="Cid", IsForeignKey=true)]
		public Challenge Challenge
		{
			get
			{
				return this._Challenge.Entity;
			}
			set
			{
				Challenge previousValue = this._Challenge.Entity;
				if (((previousValue != value) 
							|| (this._Challenge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Challenge.Entity = null;
						previousValue.Person_Challenge.Remove(this);
					}
					this._Challenge.Entity = value;
					if ((value != null))
					{
						value.Person_Challenge.Add(this);
						this._Cid = value.Cid;
					}
					else
					{
						this._Cid = default(int);
					}
					this.SendPropertyChanged("Challenge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Challenge", Storage="_Person", ThisKey="Uid", OtherKey="Uid", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Person_Challenge.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Person_Challenge.Add(this);
						this._Uid = value.Uid;
					}
					else
					{
						this._Uid = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Uid;
		
		private string _Uname;
		
		private System.Nullable<int> _Uage;
		
		private string _Usex;
		
		private string _Uemail;
		
		private string _Upassword;
		
		private System.Nullable<int> _Uphone;
		
		private EntitySet<Person_Challenge> _Person_Challenge;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(int value);
    partial void OnUidChanged();
    partial void OnUnameChanging(string value);
    partial void OnUnameChanged();
    partial void OnUageChanging(System.Nullable<int> value);
    partial void OnUageChanged();
    partial void OnUsexChanging(string value);
    partial void OnUsexChanged();
    partial void OnUemailChanging(string value);
    partial void OnUemailChanged();
    partial void OnUpasswordChanging(string value);
    partial void OnUpasswordChanged();
    partial void OnUphoneChanging(System.Nullable<int> value);
    partial void OnUphoneChanged();
    #endregion
		
		public Person()
		{
			this._Person_Challenge = new EntitySet<Person_Challenge>(new Action<Person_Challenge>(this.attach_Person_Challenge), new Action<Person_Challenge>(this.detach_Person_Challenge));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uname", DbType="VarChar(100)")]
		public string Uname
		{
			get
			{
				return this._Uname;
			}
			set
			{
				if ((this._Uname != value))
				{
					this.OnUnameChanging(value);
					this.SendPropertyChanging();
					this._Uname = value;
					this.SendPropertyChanged("Uname");
					this.OnUnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uage", DbType="Int")]
		public System.Nullable<int> Uage
		{
			get
			{
				return this._Uage;
			}
			set
			{
				if ((this._Uage != value))
				{
					this.OnUageChanging(value);
					this.SendPropertyChanging();
					this._Uage = value;
					this.SendPropertyChanged("Uage");
					this.OnUageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usex", DbType="VarChar(50)")]
		public string Usex
		{
			get
			{
				return this._Usex;
			}
			set
			{
				if ((this._Usex != value))
				{
					this.OnUsexChanging(value);
					this.SendPropertyChanging();
					this._Usex = value;
					this.SendPropertyChanged("Usex");
					this.OnUsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uemail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Uemail
		{
			get
			{
				return this._Uemail;
			}
			set
			{
				if ((this._Uemail != value))
				{
					this.OnUemailChanging(value);
					this.SendPropertyChanging();
					this._Uemail = value;
					this.SendPropertyChanged("Uemail");
					this.OnUemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Upassword
		{
			get
			{
				return this._Upassword;
			}
			set
			{
				if ((this._Upassword != value))
				{
					this.OnUpasswordChanging(value);
					this.SendPropertyChanging();
					this._Upassword = value;
					this.SendPropertyChanged("Upassword");
					this.OnUpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uphone", DbType="Int")]
		public System.Nullable<int> Uphone
		{
			get
			{
				return this._Uphone;
			}
			set
			{
				if ((this._Uphone != value))
				{
					this.OnUphoneChanging(value);
					this.SendPropertyChanging();
					this._Uphone = value;
					this.SendPropertyChanged("Uphone");
					this.OnUphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Challenge", Storage="_Person_Challenge", ThisKey="Uid", OtherKey="Uid")]
		public EntitySet<Person_Challenge> Person_Challenge
		{
			get
			{
				return this._Person_Challenge;
			}
			set
			{
				this._Person_Challenge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Person_Challenge(Person_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Person_Challenge(Person_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
}
#pragma warning restore 1591
